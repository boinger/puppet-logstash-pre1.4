
# http://nxlog.org/nxlog-docs/en/nxlog-reference-manual.html

# ROOT is the folder nxlog is installed into.
define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir %ROOT%\data
Pidfile %ROOT%\data\nxlog.pid
SpoolDir %ROOT%\data
LogFile %ROOT%\data\nxlog.log

# xm_json exports to_json().
# to_json() converts the ﬁelds to JSON and returns a string.
# Fields having a leading dot (.) or underscore (_) and the ’raw_event’ will be automatically excluded.
<Extension json>
    Module xm_json
</Extension>

# ????
<Extension log4net>
    Module xm_csv
    Fields $date, $thread, $level, $logger, $message
    FieldTypes string, string, string, string, string
    Delimiter ';'
</Extension>


# im_msvistalog polls the event log and tracks offset?????
# For windows 2003 and earlier use the im_mseventlog module.
<Input eventlog>
    Module im_msvistalog
</Input>

<Input iis>
    Module im_file
    file "C:\inetpub\logs\LogFiles\w3svc1\u_ex*"
</Input>

<Input iis2>
    Module im_file
    file "C:\inetpub\logs\LogFiles\w3svc2\u_ex*"
</Input>

<Input iis3>
    Module im_file
    file "C:\inetpub\logs\LogFiles\w3svc3\u_ex*"
</Input>

<Input iis4>
    Module im_file
    file "C:\inetpub\logs\LogFiles\w3svc4\u_ex*"
</Input>

<Input api>
    Module im_file
    file "D:\iCiX\Sites\Logs\dev8\log4net\searchapi.log"

    ReadFromLast FALSE
    Exec if $raw_event =~ /^#/ drop(); \
         else \
         { \
             log4net->parse_csv(); \
             $EventTime = parsedate($date + " " + $message); \
         }
</Input>

# om_file writes log messages to a file
<Output out>
    Module om_file
    file "c:\\logs\\nxlog.txt"
</Output>

# om_ssl initiates a tcp connection over ssl to a remote host and transfers log messages.
# The "Reconnect" directive has been deprecated as of version 2.4.
#    The module will try to reconnect automatically at increasing intervals on all errors.
<Output sslout>
    Module om_ssl
    Port 12346
    Host 54.215.145.145
    CAFile C:\ssl\ca.crt
    CertFile C:\ssl\logstash.crt
    CertKeyFile c:\ssl\logstash.key
    AllowUntrusted TRUE
    Exec $EventReceivedTime = integer($EventReceivedTime) / 1000000; to_json();
</Output>

<Route 1>
    Path eventlog, iis, iis2, iis3, api => sslout
</Route>

# the corresponding logstash config should be something like
# tcp {
#   port         => 12346
#   type         => "nxlog"
#   codec        => 'json'
#   ssl_enable   => true
#   ssl_cacert   => "/etc/ssl/certs/ca.crt"
#   ssl_cert     => "/etc/ssl/certs/logstash.crt"
#   ssl_key      => "/etc/ssl/certs/logstash.key"
#   tags         => [ "windows" ]
#   data_timeout => 600
# }

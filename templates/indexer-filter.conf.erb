
filter {

  # grok:
  # overview:        http://logstash.net/docs/1.2.1/filters/grok
  # regex:           http://www.geocities.jp/kosako3/oniguruma/doc/RE.txt
  # grok test cases: https://github.com/logstash/logstash/blob/v1.2.1/spec/filters/grok.rb
  # black box cases: https://github.com/Icix/ops-tests/blob/master/logstash_spec.rb

  # mind that we're now using our own patterns_dir which is managed by puppet

  if ! [shn] {
    if [host] =~ /[a-zA-Z]+/ {
      mutate {
        add_field => {"shn" => "%{host}"}
      }
      mutate {
        gsub => ["shn", '\..*', '']
      }
    }
  }

  if ! [fqdn] {
    if [host] =~ /\./ {
      if [host] !~ /\d+\.\d+\.\d+\.\d+/ {
        mutate {
          add_field => {"fqdn" => "%{host}"}
        }
      }
    }
  }

  if [type] == "lumberjack" {
    mutate {
      remove_field => ["offset"]
    }
  }

  if [file] == "/var/log/secure" {
    grok {
      match => ["message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{IPORHOST:syslog_host} %{SYSLOGPROG}: %{GREEDYDATA:message}"]
      overwrite => ["message"]
      remove_field => ["syslog_host"]
    }

    if [program] == "sudo" {
      grep {
        match => [ "message", "COMMAND=/usr/lib64/nagios/plugins/icix/check_svstat.pl" ]
        negate => true
      }
    }

    date {
      match => ["syslog_timestamp",  "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601"]
      remove_field => ["syslog_timestamp"]
    }

    if [program] == "sshd" {
      mutate {
        add_field => {'sshd_increment' => "%{message}"}
      }
      mutate {
        lowercase => ['sshd_increment']
        gsub => ['sshd_increment', '\;.*', '',
                 'sshd_increment', '\d+\.\d+\.\d+\.\d+.*', '',
                 'sshd_increment', '(\s+[uU]ser)\s+.*', '\1',
                 'sshd_increment', '\W+', '_',
                 'sshd_increment', '^_+|_+$', ''
                ]
      }
    }
  }

  if [file] == "/var/log/messages" {
    grok {
      match => ["message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{IPORHOST:syslog_host} %{SYSLOGPROG}: %{GREEDYDATA:message}"]
      overwrite => ["message"]
      remove_field => ["syslog_host"]
    }

    if [program] == "dhclient" {
      drop {}
    }

    date {
      match => ["syslog_timestamp",  "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601"]
      remove_field => ["syslog_timestamp"]
    }
  }

  if [type] == "applog" {
    kv {
      field_split => "^"
      value_split => ":"
    }
  }
}

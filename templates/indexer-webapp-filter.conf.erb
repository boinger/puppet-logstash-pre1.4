
filter {
  # overview:        http://logstash.net/docs/1.2.1/filters/grok
  # regex:           http://www.geocities.jp/kosako3/oniguruma/doc/RE.txt
  # test cases:      https://github.com/logstash/logstash/blob/v1.2.1/spec/filters/grok.rb
  # black box cases: https://github.com/Icix/ops-tests/blob/master/logstash_spec.rb

  mutate {
    add_field => {"logstash_server" => "<%= @hostname %>"}
  }

  if [type] == "nxlog" {
    mutate {
      remove_field => [ "SourceModuleType", "EventReceivedTime", "Keywords", "ProviderGuid", "OpcodeValue", "Opcode" ]
    }

    if [Hostname] {
      mutate {
        add_field => { "shn" => "%{Hostname}"}
        add_field => { "fqdn" => "%{Hostname}" }
        remove_field => [ "Hostname" ]
      }
      mutate {
        gsub => ["shn", '\..*', '']
      }
    }

    if [SourceModuleName] == "windowseventlog" {
      if [EventTime] {
        date {
          timezone => "America/Chicago"
          match => ["EventTime",  "YYYY-MM-dd HH:mm:ss", "ISO8601"]
          remove_field => ["EventTime"]
        }
      }
    } else {
      if [EventTime] {
        date {
          match => ["EventTime",  "YYYY-MM-dd HH:mm:ss", "ISO8601"]
          remove_field => ["EventTime"]
        }
      }
    }

  } else if [type] == "applog" {
    kv {
      field_split => "^"
      value_split => ":"
    }
  }

  # replace host with the more specific "fully qualified domain name" and "short host name"
  if [host] {
    if ! [shn] {
      if [host] =~ /[a-zA-Z]+/ {
        mutate {
          add_field => {"shn" => "%{host}"}
        }
        mutate {
          gsub => ["shn", '\..*', '']
        }
      }
    }

    if ! [fqdn] {
      if [host] =~ /\./ {
        if [host] !~ /\d+\.\d+\.\d+\.\d+/ {
          mutate {
            add_field => {"fqdn" => "%{host}"}
          }
        }
      }
    }

    mutate {
      remove_field => [ "host" ]
    }
  }
}
